CREATE TABLE IF NOT EXISTS T4_VEHICLE
(
	T4_VEHICLE_ID INTEGER NOT NULL ,
	T4_POLICY_ID VARCHAR(20) NOT NULL ,
	T4_DEPENDENT_NOK_ID VARCHAR(20) NOT NULL ,
	T4_VEHICLE_REGISTRATION_NUMBER VARCHAR(20) NOT NULL ,
	T4_VEHICLE_VALUE INTEGER NOT NULL ,
	T4_VEHICLE_TYPE VARCHAR(20) NOT NULL ,
	T4_VEHICLE_SIZE INTEGER NOT NULL ,
	T4_VEHICLE_NUMBER_OF_SEAT INTEGER NOT NULL ,
	T4_VEHICLE_MANUFACTURER VARCHAR(20) NOT NULL ,
	T4_VEHICLE_ENGINE_NUMBER INTEGER NOT NULL ,
	T4_VEHICLE_CHASIS_NUMBER INTEGER NOT NULL ,
	T4_VEHICLE_NUMBER VARCHAR(20) NOT NULL ,
	T4_VEHICLE_MODEL_NUMBER VARCHAR(20) NOT NULL ,
	T4_CUST_ID INTEGER NOT NULL ,
	CONSTRAINT T4_XPKVEHICLE_6 PRIMARY KEY (T4_VEHICLE_ID),
	CONSTRAINT T4_R_92 FOREIGN KEY (T4_CUST_ID) REFERENCES T4_CUSTOMER(T4_CUST_ID) ON DELETE CASCADE
);

-- This is the original table which is in 2NF. Now, the problem with this schema is that there is a transitive dependency between the T4_VEHICLE_ID and T4_NOK_ID
through T4_CUST_ID i.e in the T4_VEHICLE table we have T4_VEHICLE_ID->T4_CUST_ID and T4_CUST_ID->T4_NOK. So due to such transitive dependencies we have the 
T4_VEHICLE table to be in 2NF. Hence, to bring it to the 3NF form which is even more normalised we decompose the above table into 2 separate schemas as mentioned 
below:


CREATE TABLE IF NOT EXISTS T4_VEHICLE
(
	T4_VEHICLE_ID INTEGER NOT NULL ,
	T4_POLICY_ID VARCHAR(20) NOT NULL ,
	T4_DEPENDENT_NOK_ID VARCHAR(20) NOT NULL ,
	T4_VEHICLE_REGISTRATION_NUMBER VARCHAR(20) NOT NULL ,
	T4_VEHICLE_VALUE INTEGER NOT NULL ,
	T4_VEHICLE_TYPE VARCHAR(20) NOT NULL ,
	T4_VEHICLE_SIZE INTEGER NOT NULL ,
	T4_VEHICLE_NUMBER_OF_SEAT INTEGER NOT NULL ,
	T4_VEHICLE_MANUFACTURER VARCHAR(20) NOT NULL ,
	T4_VEHICLE_ENGINE_NUMBER INTEGER NOT NULL ,
	T4_VEHICLE_CHASIS_NUMBER INTEGER NOT NULL ,
	T4_VEHICLE_NUMBER VARCHAR(20) NOT NULL ,
	T4_VEHICLE_MODEL_NUMBER VARCHAR(20) NOT NULL ,
	CONSTRAINT T4_XPKVEHICLE_6 PRIMARY KEY (T4_VEHICLE_ID),
	CONSTRAINT T4_R_92 FOREIGN KEY (T4_CUST_ID) REFERENCES T4_CUSTOMER(T4_CUST_ID) ON DELETE CASCADE
);


CREATE TABLE IF NOT EXISTS T4_NOK_RELATION
(

	T4_CUST_ID INTEGER NOT NULL ,
	T4_NOK_ID VARCHAR(20) NOT NULL ,
	CONSTRAINT T4_XPKNOK_REL PRIMARY KEY(T4_CUST_ID),
	CONSTRAINT T4_XPKNOK_FK FOREIGN KEY(T4_CUST_ID) REFERENCES T4_VEHICLE(T4_CUST_ID) ON DELETE CASCADE
);

-- Hence, in this way, the other dependencies can also be assumed using the business rules as per the organizations convenience and be converted into to the desired
normal forms. Hence, we present such possibilities of normalization as a future scope for this project.
